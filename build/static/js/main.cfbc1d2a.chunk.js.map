{"version":3,"sources":["services/persons.js","components/Numbers.js","index.js"],"names":["baseURL","axios","get","then","response","data","obj","post","id","newObj","put","delete","console","log","Numbers","persons","setPersons","map","person","name","phone","onClick","window","confirm","PersonService","filter","promptToDelete","Notification","message","notifType","className","App","useState","filterValue","setFilterValue","newName","setNewName","newPhone","setNewPhone","notif","setNotif","filteredPersons","toLowerCase","includes","useEffect","handleChange","func","event","target","value","onChange","val","onSubmit","preventDefault","personObject","alert","some","p","find","setTimeout","catch","err","concat","type","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cfbc1d2a.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseURL = '/api/persons';\n\nconst getAll = () => axios.get(baseURL)\n        .then(response => response.data);\n\nconst createPerson = (obj) => axios.post(baseURL, obj)\n        .then(response => response.data)\n\nconst updatePerson = (id, newObj) => axios.put(`${baseURL}/${id}`, newObj)\n        .then(response => response.data)\n\nconst deletePerson = (id) => axios.delete(`${baseURL}/${id}`)\n        .then(response => console.log(response))\n\nexport default {\n    getAll,\n    createPerson,\n    updatePerson,\n    deletePerson\n}","import React from 'react'\nimport PersonService from '../services/persons';\n\nconst Numbers = ({ persons, setPersons }) => {\n\n    const promptToDelete = person => {\n        if (window.confirm(`Do you really want to delete ${person.name}?`)) {\n            PersonService.deletePerson(person.id)\n                .then(data => {\n                    console.log(data)\n                    setPersons(persons.filter(obj => obj.id !== person.id))\n                })\n        }\n    } \n\n    return (\n        <>\n            <h1>Numbers</h1>\n            <ul>\n                {persons.map(person =>\n                    <li key={person.id}>\n                        {person.name} {person.phone}\n                        <button onClick={() => promptToDelete(person)}> delete </button>\n                    </li>)}\n            </ul>\n        </>\n    )\n}\n\nexport default Numbers","import React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport Numbers from './components/Numbers';\nimport PersonService from './services/persons';\nimport './index.css';\n\nconst Notification = ({message, notifType}) => {\n  if (message === null) {\n    return null;\n  }\n  return(\n    <div className={notifType}>\n      {message}\n    </div>\n  )\n}\n\nconst App = () => {\n  //State hooks\n  const [persons, setPersons] = useState([])\n  const [filterValue, setFilterValue] = useState('')\n  const [newName, setNewName] = useState('')\n  const [newPhone, setNewPhone] = useState('')\n  const [notif, setNotif] = useState({\n    message: null,\n    notifType: \"success\"\n  })\n\n  const filteredPersons = persons.filter(person => \n    person.name.toLowerCase().includes(filterValue.toLowerCase()));\n\n  useEffect(() => {\n    PersonService.getAll()\n      .then(data => {\n        setPersons(data);\n      })\n  }, [persons])\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    const personObject = {\n      name: newName,\n      phone: newPhone\n    }\n\n    if (newName === '' || newPhone === '') {\n      alert('A required field is empty.')\n    } else if (persons.some(person => person.name === newName)) {\n      if (window.confirm(`${newName} is already added to the book, replace the old number with a new one?`)) {\n        const p = persons.find(person => person.name === newName);\n        PersonService.updatePerson(p.id, personObject)\n          .then(data => {\n            setPersons(persons.map(person => person.id !== p.id ? person : data))\n            setNewName('');\n            setNewPhone('')\n            setNotif({message: `${newName} has been updated successfully`, notifType: \"success\"})\n            setTimeout(() => {\n              setNotif({message: null, notifType:\"success\"})\n            }, 5000)\n          }).catch(err => {\n            console.log(err);\n            setNotif({message: `${newName} has already been removed from the server`, notifType: \"error\"})\n            setTimeout(() => {\n              setNotif({message: null, notifType:\"success\"})\n            }, 5000)\n          })\n      }\n    } else {\n      PersonService.createPerson(personObject)\n        .then(data => {\n          setPersons(persons.concat(data))\n          setNewName('');\n          setNewPhone('');\n          setNotif({message: `${newName} has been added successfully`, notifType: \"success\"})\n          setTimeout(() => {\n            setNotif({message: null, notifType:\"success\"})\n          }, 5000)\n        }).catch(err => console.log(err))\n    }\n  }\n\n  const handleChange = (func) => (event) => {\n    func(event.target.value);\n  }\n\n  const filter = val => {\n    setFilterValue(val);\n  }\n\n  return (\n    <>\n      <Notification message={notif.message} notifType={notif.notifType} />\n      <div>\n        Filter\n        <input value={filterValue} onChange={handleChange(filter)} />\n      </div>\n      <h1>Phonebook</h1>\n      <form onSubmit={handleSubmit}>\n        <div>\n          Name: <input value={newName} onChange={handleChange(setNewName)} />\n        </div>\n        <div>\n          Phone: <input value={newPhone} onChange={handleChange(setNewPhone)} />\n        </div>\n        <div>\n          <button type=\"submit\">\n            add\n          </button>\n        </div>\n      </form>\n      <Numbers persons={filteredPersons} setPersons={setPersons} />\n    </>\n  )\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}